---
# Windows Service Start
- name: 'Get Service Status'
  win_shell: >-
    Get-Service | ?{$_.Name -eq "{{ sname }}" -or $_.DisplayName -eq
    "{{ sname }}"} | %{Write-host "Name:"$_.Name";Status:"$_.Status}
  changed_when: false
  register: service_output
  ignore_errors: true

- name: 'Start Service'
  win_shell: >-
    Get-Service | ?{$_.Name -eq "{{ sname }}" -or $_.DisplayName -eq
    "{{ sname }}"} | Start-Service;Get-Service | ?{$_.Name -eq
    "{{ sname }}" -or $_.DisplayName -eq "{{ sname }}"} |
    %{Write-host "Name:"$_.Name";Status:"$_.Status}
  register: start_output
  changed_when: "'Running' in start_output.stdout"
  when: "'Running' not in service_output.stdout"
  ignore_errors: true

# Set Return values in job_msg for feedback
- name: Set auto recovered in job_msg for feedback
  set_fact:
    job_msg: >-
      Auto-Recovered, Service is already Running.
      {{ service_output.stdout }}
  when: "'Running' in service_output.stdout"
  ignore_errors: true

- name: Set resolved in job_msg for feedback
  set_fact:
    job_msg: >-
      Resolved, Service is Started Successfully.
      {{ start_output.stdout }}
  when: "'Running' in start_output.stdout"
  ignore_errors: true

- name: Set failed in job_msg for feedback
  set_fact:
    job_msg: >-
      Failed, Error in Starting Service. {{ start_output | to_yaml }}
  when: start_output.failed or start_output.stdout == ""
  ignore_errors: true
